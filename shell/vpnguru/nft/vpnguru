#!/bin/sh -e
#
# Copyright (C) 2023 Yousong Zhou <yszhou4tech@gmail.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#
# Script for diverting selected traffics through vpn interface
#
#  - create and initialize nft set
#  - install nft rules to mark packets
#  - install ip rule and routes
#
# NOTE: it is not expected to work out of box
#

o_ifname="${o_ifname}"
o_gateway="${o_gateway}"
o_rttable="${o_rttable:-200}"
o_fwmark="${o_fwmark:-200}"
if [ -z "$o_ifname" ]; then
	exit 1
fi
o_remote_servers="${o_remote_servers}"
o_dst_forward="${o_dst_forward-
	8.8.8.8
	1.1.1.1
}"
o_dst_bypass="
	${o_dst_bypass}
	0.0.0.0/8
	10.0.0.0/8
	100.64.0.0/10
	127.0.0.0/8
	169.254.0.0/16
	172.16.0.0/12
	192.0.0.0/24
	192.0.2.0/24
	192.31.196.0/24
	192.52.193.0/24
	192.88.99.0/24
	192.168.0.0/16
	192.175.48.0/24
	198.18.0.0/15
	198.51.100.0/24
	203.0.113.0/24
	224.0.0.0/4
	240.0.0.0/4
	255.255.255.255
"

__errmsg() {
	echo "vpnguru: $1" >&2
}

__die() {
	__errmsg "$1"
	exit 1
}

vpnguru_flush() {
	:
}

vpnguru_nftset_init() {
	vpnguru_nftset_init_ vpnguru_dst_bypass "$o_dst_bypass $o_remote_servers"
	vpnguru_nftset_init_ vpnguru_dst_forward "$o_dst_forward"
}

vpnguru_nftset_init_() {
	local setname="$1"; shift
	local el

	cat <<EOF
set $setname {
	type ipv4_addr;
	flags interval;
	auto-merge;
	elements = {
EOF

	for el in $1; do
	cat <<EOF
		$el,
EOF
	done | sed '$s/,$//'
	cat <<EOF
	}
}
EOF
}

vpnguru_nftchains_init() {
	cat <<EOF
chain vpnguru_prerouting {
	type filter hook prerouting priority mangle;
	goto vpnguru_mark;
}
chain vpnguru_output {
	type route hook output priority mangle;
	goto vpnguru_mark;
}
chain vpnguru_mark {
	ip daddr @vpnguru_dst_bypass accept;
	ip daddr @vpnguru_dst_forward meta mark set $o_fwmark;
}
EOF
}

ip() {
	command ip "$@"
}

vpnguru_route_init() {
	ip rule add fwmark "$o_fwmark" lookup "$o_rttable"
	ip route add default dev "$o_ifname" ${o_gateway:+via "$o_gateway"} table "$o_rttable"
	ip route flush cache
}

arg_ipt=${arg_ipt}
arg_nft=${arg_nft}
arg_nft_print_table=${arg_nft_print_table}
arg_nft_print_chain=${arg_nft_print_chain}
arg_nft_print_=
arg_route_do_=1

while test "$#" -gt 0; do
	case "$1" in
		--ipt) arg_ipt=1; shift ;;
		--nft) arg_nft=1; shift ;;
		--nft-print-table) arg_nft_print_table=1; shift ;;
		--nft-print-chain) arg_nft_print_chain=1; shift ;;
		--no-ipt) arg_ipt=; shift ;;
		--no-nft) arg_nft=; shift ;;
		--no-nft-print-table) arg_nft_print_table=; shift ;;
		--no-nft-print-chain) arg_nft_print_chain=; shift ;;
		*) __die "unknown arg $1";;
	esac
done
if test -n "$arg_nft" && test -n "$arg_ipt"; then
	__die "--ipt and --nft are exclusive to each other"
fi
if test -z "$arg_nft" && test -z "$arg_ipt"; then
	__die "--ipt or --nft need to be enabled"
fi
if test -n "$arg_nft_print_table" && test -n "$arg_nft_print_chain"; then
	__die "--nft-print-table and --nft-print-chain are exclusive to each other"
fi
if test -n "$arg_nft_print_table" || test -n "$arg_nft_print_chain"; then
	arg_nft_print_=1
	arg_route_do_=
fi

vpnguru_flush
if test -n "$arg_nft"; then
	{
		test -n "$arg_nft_print_chain" || echo 'table inet vpnguru {'
		{
			vpnguru_nftset_init
			vpnguru_nftchains_init
		} | {
			test -n "$arg_nft_print_chain" && cat || sed -e 's/^/\t/'
		}
		test -n "$arg_nft_print_chain" || echo '}'
	} | {
		test -n "$arg_nft_print_" && cat || nft -f -
	}
# TODO move arg_ipt support here
fi

if test -n "$arg_route_do_"; then
	vpnguru_route_init
fi
